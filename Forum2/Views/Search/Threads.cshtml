@model SearchResultViewModel

@{
    ViewData["Title"] = "Search";
}

<h1>Search Threads</h1>
<div>
    <form class="d-flex" asp-controller="Search" asp-action="Threads" method="get">
        <input type="text" class="form-control me-2" id="query" name="query" placeholder="Search" value="@Model.Query" required="required">
        <button type="submit" class="btn btn-outline-success">Search</button>
    </form>
    <a class="btn btn-sm btn-outline-primary d-block mt-2" asp-controller="Search" asp-action="Index" asp-route-query="@Model.Query">General Search</a>
</div>

@if (Model.Query != null)
{
    <hr class="my-4" />
    @if (Model.Threads == null || !Model.Threads.Any())
    {
        <p>No threads matching the search query.</p>
    }
    else
    {
        <ul class="list-group mb-2">
            @foreach (var thread in Model.Threads)
            {
                <li class="list-group-item">
                    <partial name="Lookup/_ThreadLookup" model="thread"/>
                </li>
            }
        </ul>
        <nav>
            <ul class="pagination pagination-sm justify-content-center">
                @if (Model.CurrentPage != 1)
                {
                    <li class="page-item">
                        <a asp-controller="Search" asp-action="Threads" asp-route-query="@Model.Query" asp-route-page="@(Model.CurrentPage - 1)" class="page-link">Previous</a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled">
                        <a class="page-link">Previous</a>
                    </li>
                }
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    if (i == Model.CurrentPage)
                    {
                        <li class="page-item active"><a class="page-link">@i.ToString()</a></li>
                    }
                    else
                    {
                        <li class="page-item">
                            <a asp-controller="Search" asp-action="Threads" asp-route-query="@Model.Query" asp-route-page="@i" class="page-link">@i.ToString()</a>
                        </li>
                    }
                }
                @if (Model.CurrentPage != Model.TotalPages)
                {
                    <li class="page-item">
                        <a asp-controller="Search" asp-action="Threads" asp-route-query="@Model.Query" asp-route-page="@(Model.CurrentPage + 1)" class="page-link">Next</a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled">
                        <a class="page-link">Next</a>
                    </li>
                }
            </ul>
        </nav>
    }
}