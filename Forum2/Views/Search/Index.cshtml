@{
    ViewData["Title"] = "Search";
}

@using Microsoft.AspNetCore.Identity
@using NuGet.Protocol
@model SearchResultViewModel
@inject RoleManager<ApplicationRole> RoleManager
@inject UserManager<ApplicationUser> UserManager

<h1>Search</h1>

<div>
    <form class="d-flex" asp-controller="Search" asp-action="Index" method="get">
        <input type="text" class="form-control me-2" id="query" name="query" placeholder="Search" value="@Model.Query" required="required">
        <button type="submit" class="btn btn-outline-success">Search</button>
    </form>
</div>

@if (Model.Query != null)
{
    <hr class="my-4" />
    <div class="row">
        <div class="col-md-4 mb-4 mb-md-0">
            <h2>Threads</h2>
            @if (Model.Threads == null || !Model.Threads.Any())
            {
                <p>No threads matching the search query.</p>
            }
            else
            {
                <ul class="list-group">
                    @foreach (var thread in Model.Threads)
                    {
                        var user = UserManager.FindByIdAsync(thread.ForumThreadCreatorId).Result;
                        <li class="list-group-item">
                            <div class="d-flex">
                                <img src="@user.AvatarUrl" alt="@user.DisplayName" height="48" width="48" class="me-2" />
                                <div>
                                    <div class="d-block">
                                        <a href="#">@thread.ForumThreadTitle</a>
                                    </div>
                                    <div class="d-block" style="font-size: 14px;">
                                        in @thread.ForumCategory.ToJson() <!-- TODO: this should display category name, but just returns null -->
                                    </div>
                                    <div class="d-block" style="font-size: 12px;">
                                        <span class="me-1">
                                            <a class="text-muted" asp-controller="Profile" asp-action="Index" asp-route-displayName="@user.DisplayName">@user.DisplayName</a>
                                        </span>
                                        <span class="text-muted">
                                            Date Here <!-- TODO -->
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </li>
                    }
                </ul>
            }
            <a class="btn btn-sm btn-outline-primary d-block mt-2" asp-controller="Search" asp-action="Threads" asp-route-query="@Model.Query">Search in Threads</a>
        </div>
        <div class="col-md-4 mb-4 mb-md-0">
            <h2>Posts</h2>
            @if (Model.Posts == null || !Model.Posts.Any())
            {
                <p>No posts matching the search query.</p>
            }
            else
            {
                <ul class="list-group">
                    @foreach (var post in Model.Posts)
                    {
                        var user = @UserManager.FindByIdAsync(post.ForumPostCreatorId).Result;
                        <li class="list-group-item">
                            <div class="d-flex">
                                <img src="@user.AvatarUrl" alt="@user.DisplayName" height="48" width="48" class="me-2" />
                                <div>
                                    <div class="d-block">
                                        <a href="#">@post.ForumThread.ForumThreadTitle</a> <!-- TODO -->
                                    </div>
                                    <div class="d-block" style="font-size: 14px;">
                                        @if (post.ForumPostContent.Length >= 20)
                                        {
                                            @post.ForumPostContent.Substring(0, 20)
                                        } else
                                        {
                                            @post.ForumPostContent
                                        }
                                    </div>
                                    <div class="d-block" style="font-size: 12px;">
                                        <span class="me-1">
                                            <a class="text-muted" asp-controller="Profile" asp-action="Index" asp-route-displayName="@user.DisplayName">@user.DisplayName</a>
                                        </span>
                                        <span class="text-muted">
                                            Date Here <!-- TODO -->
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </li>
                    }
                </ul>
            }
            <a class="btn btn-sm btn-outline-primary d-block mt-2" asp-controller="Search" asp-action="Posts" asp-route-query="@Model.Query">Search in Posts</a>
        </div>
        <div class="col-md-4">
            <h2>Users</h2>
            @if (Model.Users == null || !Model.Users.Any())
            {
                <p>No user matching the search query.</p>
            }
            else
            {
                <ul class="list-group">
                    @foreach (var user in Model.Users)
                    {
                        <li class="list-group-item">
                            <div class="d-flex">
                                <img src="@user.AvatarUrl" alt="@user.DisplayName" height="48" width="48" class="me-2" />
                                <div>
                                    <div class="d-block">
                                        <a asp-controller="Profile" asp-action="Index" asp-route-displayName="@user.DisplayName">@user.DisplayName</a>
                                    </div>
                                    @if (UserManager.GetRolesAsync(user).Result.Count > 0)
                                    {
                                        var role = RoleManager.FindByNameAsync(UserManager.GetRolesAsync(user).Result.FirstOrDefault()).Result;
                                        <div class="d-block">
                                            <div class="badge" style="background: @role.Color;">
                                                @role.Name
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </li>
                    }
                </ul>
            }
            <a class="btn btn-sm btn-outline-primary d-block mt-2" asp-controller="Search" asp-action="Users" asp-route-query="@Model.Query">Search in Users</a>
        </div>
    </div>
}