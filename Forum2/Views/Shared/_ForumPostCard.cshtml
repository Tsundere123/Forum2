@using Forum2.DAL
@using Westwind.AspNetCore.Markdown
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@model ForumPost

@inject UserManager<ApplicationUser> UserManager

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/easymde/dist/easymde.min.css">
<script src="https://cdn.jsdelivr.net/npm/easymde/dist/easymde.min.js"></script>

<div class="container">
    <div class="row">
        @{
            //Checks if post is soft deleted. Sost deleted posts will be displayed as deleted, thus keeping context that a post was deleted.
            //Does not delete any quotations from the post
            if (Model.ForumPostIsSoftDeleted)
            {
                <div class="card text-danger">
                    <p>This post has been deleted</p>
                </div>
            }
            else
            {
                @* Profile card *@
                <div class="col-md-3 mb-2 mb-md-0">
                    <partial name="_Profile" model="UserManager.FindByIdAsync(Model.ForumPostCreatorId).Result"/>
                </div>
        
                @* Main post content *@
                <div class="col-md-9" >
                    <div id="postContent_@Model.ForumPostId" class="card" style="min-height: 10rem">
                        @Html.Raw(Markdown.Parse(@Model.ForumPostContent, sanitizeHtml: true))
                    </div>
                    
        
                    <div class="card-footer" style="border: 0;padding: 0;">
                        @* Quote button *@
                        <div style="border: 0;padding: 0;">
                            <button class="btn col-1 btn-dark" style="display: inline-block;" id="quoteThisPost_@Model.ForumPostId">Quote</button>
                            
                            @* EDIT/DELETE *@
                            @if (SignInManager.IsSignedIn(User))
                            {
                                @if (User.IsInRole("Administrator") || User.IsInRole("Moderator") || UserManager.GetUserAsync(User).Result.Id == Model.ForumPostCreatorId)
                                {
                                    <a class="btn col-1 btn-secondary" style="display: inline-block;" asp-controller="ForumPost" asp-action="UpdateForumPostContent" asp-route-forumPostId="@Model.ForumPostId">EDIT</a>
                                    <a class="btn col-1 btn-danger" style="display: inline-block;" asp-controller="ForumPost" asp-action="DeleteSelectedForumPost" asp-route-forumPostId="@Model.ForumPostId">DELETE</a>
                                }
                            }
                        </div>
                    </div>
                    
                    @* Last edited *@
                    <div>
                        @if (Model.ForumPostLastEditedTime > Model.ForumPostCreationTimeUnix)
                        {
                            <div>
                                <p>Last edited by: @UserManager.FindByIdAsync(Model.ForumPostLastEditedBy).Result.DisplayName</p>
                                <p>At: @Model.ForumPostLastEditedTime</p>
                            </div>
                        }
                    </div>
                </div>
            }
        }
    </div>
</div>


<script>
//Check if create new post input box is visible, if not, enable
async function checkIfInputVisible()
{
    if (!document.getElementById("createNewForumPost").innerHTML )
    {
        await $.ajax({
            url: "/ForumPost/Create/@Model.ForumThreadId",
            success: function (html) {
                // Update the page with the HTML of the partial view.
                $("#createNewForumPost").html(html);
            }
        });
    }
}
    
async function quotePost()
{
    //Check if create new post input box is visible, if not, enable
    await checkIfInputVisible();
    let result = "";
    
    //Collects original data
    let inputField = easyMDE.value();
    let quotedPost = " @Model.ForumPostContent ";
    
    //Cleans data of HTML tags
    let inputParsed = new DOMParser().parseFromString(inputField,"text/html");
    let quoteParsed = new DOMParser().parseFromString(quotedPost,"text/html");

    inputParsed = inputParsed.documentElement.textContent;
    quoteParsed = quoteParsed.documentElement.textContent;
    quoteParsed = quoteParsed.replace(/<\/?[^>]+(>|$)/g, "");

    //Quote text content to be input
    result += inputParsed;
    result += "Quoted from post by " + "@UserManager.FindByIdAsync(Model.ForumPostCreatorId).Result.DisplayName";
    result += quoteParsed;

    //Places resulting quote into input box
    easyMDE.value(result);
    
    //Hides button to create new post
    document.getElementById('createNewForumPostButton').hidden = true;
}
</script>

<script>
$("#quoteThisPost_@Model.ForumPostId").click(quotePost);
</script>